syntax = "proto3";

option csharp_namespace = "ApiGRPCDiceyProject";

package throw;

// Service GRPC permettant de gérer les requêtes en lien avec les lancers (Throw).
service ThrowService {
    rpc GetThrowById (RequestGetThrowById) returns (Throw) {}
    rpc GetThrowByProfileId(RequestGetThrowByProfileId) returns (ListThrows) {}
    rpc AddThrow(RequestAddThrow) returns (Throw) {}
    rpc RemoveThrow(RequestRemoveThrow) returns (ResponseRemoveThrow) {}
}

// Message envoyé par le client pour GetThrowById
message RequestGetThrowById {
    // Id du lancer voulu
    string searched_id = 1;
}

// Réponse de l'API après que GetThrowById a été appelée
message Throw {
    // Id du lancer voulu
    string throw_id = 1; 
    // Id du dé utilisé pour effectué le lancer
    int32 idDice = 2;
    // Résultat obtenu
    int32 result = 3;
    // Id du profil qui a effectué le lancer.
    string profile_id = 4;
}

// Message envoyé par le client pour GetThrowByProfilId
message RequestGetThrowByProfileId {
    /// Id du profil qui contient les lancers
    string profile_id = 1;
    // Numéro de pages
    int32 num_pages = 2;
    /// Nombre d'éléments à récupérer
    int32 nb_elements = 3;
}

// Réponse de l'API après que GetThrowByProfilId a été appelée
message ListThrows {
    /// Liste des lancers récupérés
    repeated Throw throws = 1;
}

// Message envoyé par le client pour AddThrow
message RequestAddThrow {
    // Id du dé utilisé pour effectué le lancer
    int32 idDice = 1;
    // Résultat obtenu
    int32 result = 2;
    // Id du profile qui a lancer le dé.
    string idProfile = 3;
}

// Message envoyé par le client pour RemoveThrow
message RequestRemoveThrow {
    // Id du lancer à supprimé
    string id = 1;
}

message ResponseRemoveThrow {
    // Résultat de la réquête
    bool res = 1;
}